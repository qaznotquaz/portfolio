@import url("https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;700&display=swap");
@import "font-awesome/fontawesome.scss";
@import "font-awesome/solid.scss";
@import "font-awesome/brands.scss";

@font-face {
  font-family: Ubuntu, sans-serif;
}

$default-font: Ubuntu, sans-serif !default;
$default-text-size-1: 12pt;
$default-text-size-2: 14pt;

$font: $default-font !default;
$text-size-1: $default-text-size-1 !default;
$text-size-2: $default-text-size-2 !default;
$section-bg: $bg-2 !default;

@mixin square($side-length) {
  height: $side-length;
  width: $side-length;
}

@mixin transition($value: all 0.2s ease-in-out) {
  -moz-transition: $value;
  -o-transition: $value;
  -webkit-transition: $value;
  transition: $value;
}

*, *::before, *::after {
  box-sizing: border-box;
}

/* affix scrollbar to the side of the screen, even when no scrolling is necessary.
    this is to keep the total width of the main body of the page consistent, since
    i've had a number of behavioral issues caused by the scrollbar making that inconsistent */
html {
  overflow-y: scroll;
}

::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

// --- end affixing scrollbar ---

:root {
  font-family: $font;
}

/* strip text decoration based on visitation from links. because i use icon buttons in quite a few places,
    and because i want more control over the presentation of links within text, this makes the formatting
    for all of that much cleaner.
*/
a {
  &:link {
    text-decoration: none;
    color: inherit;
  }

  &:visited {
    text-decoration: none;
    color: inherit;
  }

  &:hover {
    text-decoration: none;
    color: inherit;
  }

  &:active {
    text-decoration: none;
    color: inherit;
  }
}


// the main body is a row-oriented flexbox containing:
//  1. the sidebar
//  2. the content column
body {
  background: $bg-1;
  margin: 0;
  display: flex;
  min-height: 100vh;
  width: 100%;
}

// the sidebar has an arrow button which opens and collapses it, as well as a list of all
//    pages related to the current project
#sidebar {
  font-family: Ubuntu, sans-serif;
  background: $section-bg;
  border-right: 4px solid $acc-1;
  width: 0;

  @include transition;

  &.closed {
    // the arrow button will tug out a bit when hovered
    #arrow-button:hover {
      width: 48px;
    }

    // this moves all the text from page links off-screen to the left.
    // other solutions have issues because of overflow clipping and auto-sizing.
    ul li a {
      left: -110%;
    }
  }

  &.open {
    // while open, the arrow will point the other direction.
    #arrow-button {
      i {
        transform: rotate(180deg) translateY(-1px);
      }

      // the arrow will push in a bit when hovered.
      &:hover {
        width: 40px;
      }
    }

    // this resets the text from page links back to where they should sit.
    ul li a {
      left: 0;
    }
  }

  // this button opens and closes the sidebar when clicked.
  #arrow-button {
    // relative so that it can hang off the edge of the sidebar without issue
    position: relative;

    cursor: pointer;

    background-color: $bg-2;
    border: 4px solid $acc-1;
    @include square(44px);
    right: -100%;

    font-size: 19pt;
    margin-top: 9px;
    padding-right: 12px;
    border-left: 0;

    display: flex;
    align-items: center;

    @include transition;

    /* this i tag specifically refers to a font-awesome icon contained
        within this element. */
    i {
      margin: auto 0 auto auto;

      @include transition;
    }
  }

  // this is the list which contains document titles/links
  ul {
    list-style-type: none;
    margin-top: -52px;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: auto;
    gap: 0;

    li {
      padding: 9px;
      margin-top: 8px;
      font-size: 14pt;
      font-weight: normal;
      width: auto;

      align-items: flex-start;
      white-space: nowrap;

      &.category {
        a {
          border-bottom: 4px solid $bg-3;
        }
      }

      &.indent {
        a {
          margin-left: 40px;
        }
      }

      &.active {
        font-weight: bold;

        a {
          border-left: 6px solid $bg-1;
        }

        & {
          &.category {
            a {
              border-bottom: 4px solid $bg-1;
            }
          }
        }
      }

      &.inactive {
        text-decoration: underline;
        text-decoration-color: $bg-1;
        text-decoration-thickness: 1.5px;
      }

      &#sidebar-title {
        a {
          border-left: 4px solid transparent;
          border-right: 4px solid transparent;
          border-bottom: 4px solid $bg-3;
          font-weight: bold;
          font-size: 16pt;

          &:hover {
            color: $text-color;
          }
        }
      }

      // link element must be relative so that it can be shunted on and off screen correctly.
      a {
        @include square(100%);
        border-left: 4px solid $bg-3;
        position: relative;
        padding: 9px;

        @include transition;

        &:hover {
          border-color: $bg-1;
          color: $bg-1;
        }
      }
    }
  }
}

// this column has the top-nav stacked upon the page's title and contents.
#content-column {
  display: flex;
  flex-direction: column;
  flex: 1;
}

// this is the navigation bar at the top with tabs representative of each project.
// it does *not* include the arrow button to open and close the sidebar.
#top-nav {
  font-family: $default-font;
  font-size: $default-text-size-2;
  padding: 16px 22px 0;
  //padding: 28px 22px 0; <- just in case i want the spacing between the arrow button and the tabs to be wider
  width: 100%;
  border: none;
  outline: none;
  text-align: left;

  display: flex;

  // the literal list of tabs
  ul {
    list-style-type: none;
    margin: 0 0 0 25px;
    //margin: 0 0 0 38px; <- just in case i want the spacing between the arrow button and the tabs to be wider
    padding: 0;
    display: flex;
    align-items: flex-end;
    flex: 1;

    // a tab in the list
    li {
      position: relative;
      z-index: 1;

      display: flex;
      align-items: center;
      background-color: $bg-2;
      border: 4px solid $acc-1;
      @include square(44px);
      margin-right: -4px;

      &.active {
        height: 48px;
        border-bottom: 0;
      }

      &.inactive {
        @include transition;

        i {
          color: $bg-3;

          @include transition;
        }

        &:hover {
          height: 48px;

          i {
            color: $bg-1;
          }
        }
      }

      &.home-tab {
        margin-right: 7px;
      }

      a {
        display: flex;
        flex-direction: column;
        padding-top: 9px;
        align-items: center;
        @include square(100%);

        i {
          margin: 0 auto;
        }
      }
    }
  }
}

// this is the div containing the page title and content.
#content-page {
  background-color: $bg-2;
  border: {
    top: 4px solid $acc-1;
    left: 4px solid $acc-1;
  }
  margin: -4px 0 0 18px;
  height: 100%;

  text: {
    align: justify;
    justify: inter-word;
  }

  div:not(.highlighter-rouge, .highlight) {
    padding: 18px 18px 0;
    font-size: $text-size-1;
    color: $text-color;
  }

  .under-construction {
    padding: 9px;
    position: absolute;
    background-color: $bg-2;
    border: 3px solid $bg-3;
    transform: rotate(-1deg);
    margin-top: 12px;
    line-height: 30px;
    font-size: 10pt;
  }

  /* where reasonable, i like to color italicized and bolded text because
      i find it makes walls of text much easier to read. many people
      disprefer this, however, because it can be distracting. for now,
      the color scheme simply doesn't differentiate much between the two.
      in the future, i intend to set up a simple client settings cookie
      so that users can decide whether or not they would like this. */
  i:not(.fa, .fab), em {
    color: $acc-1;
  }

  b, strong {
    color: $acc-2;
  }

  a {
    color: $bg-3;
    font-weight: bold;

    text: {
      decoration: underline;
      decoration-color: $bg-1;
    }

    @include transition(all 0.1s ease-in-out);

    &:hover {
      color: $bg-1;
    }
  }

  h1 {
    margin: 0;

    &:target {
      color: $bg-1;
    }

    a {
      margin-right: 9px;

      i.fas {
        font-size: 30px;
        margin: auto;
        color: $bg-3;

        @include transition(all 0.1s ease-in-out);
      }

      i.fas.fa-tools {
        color: $bg-1;
      }

      &:hover {
        i.fa-link {
          color: $bg-1;
        }
      }
    }
  }

  hr {
    color: transparent;
    border: 1px solid $bg-3;
    margin: 24px 0 16px;
  }

  // layout arrangement for code blocks
  code {
    height: 100%;
    width: auto;
    margin: 0;
    padding: 9px;

    // lines of code can get pretty long! this makes sure that the page itself doesn't get horizontally stretched out.
    overflow-x: scroll;
    max-width: calc(100vw - 79px);


    float: left;
    background-color: #404040;
    border-radius: 4px;

    .dl {
      color: #ed9d13
    }

    tab-size: 2em;
  }

  // the title strip at the top of the document, as well as the github icon on the right.
  #title {
    padding: 12px 0 12px 16px;
    width: 100%;
    border: none;
    border-bottom: 3px solid $bg-3;
    outline: none;
    text-align: left;
    font-size: $text-size-2*1.5;
    $title-color: $acc-2 !default;
    color: $title-color;
    font-weight: bold;

    #github {
      position: relative;
      float: right;
      background-color: #ed6;
      border: 3px solid $bg-3;
      @include square(48px);
      transform: rotate(15deg);
      margin-top: 4px;
      margin-right: 14px;

      @include transition;

      &:hover {
        border: 3px solid $acc-2;
        transform: rotate(5deg);

        a i {
          color: $acc-2;
        }
      }

      a {
        display: flex;
        align-items: center;

        @include square(100%);

        i {
          margin: auto;
          color: $bg-3;

          @include transition;
        }
      }
    }
  }

  #main-content {
    padding-top: 0;
    max-width: 100%;
  }
}

/* if i decide to apply a backdrop filter, this will cover cases where the user
  is using firefox since it doesn't currently fully support filters. */
@-moz-document url-prefix() {
}

/* once i return to fixing the layout, these will provide a threshold around which
    to accommodate for phone screens. */
@media screen and (max-width: 700px) {
}

@media screen and (min-width: 700px) {
}

/* because i'm testing with different color schemes, and not all such schemes include
    background images, i only want to define a background image if the scheme called
     for it. */
@if variable-exists(bg-img) {
  $background-image: url($bg-img);

  body:before {
    content: "";
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;

    display: block;
    background-image: $background-image;
    background-repeat: no-repeat;
    background-origin: content-box;
    background-size: cover;
  }
}
