@import url("https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;700&display=swap");
@import "font-awesome/fontawesome.scss";
@import "font-awesome/solid.scss";
@import "font-awesome/brands.scss";

@font-face {
  font-family: Ubuntu, sans-serif;
}

$default-font: Ubuntu, sans-serif !default;
$default-text-size-1: 12pt;
$default-text-size-2: 14pt;

$font: $default-font !default;
$text-size-1: $default-text-size-1 !default;
$text-size-2: $default-text-size-2 !default;
$section-bg: $bg-2 !default;
$track-color: lighten($bg-1, 15%);
$thumb-color: $bg-1;

@mixin square($side-length) {
  height: $side-length;
  width: $side-length;
}

@mixin transition($value: all 0.2s ease-in-out) {
  -moz-transition: $value;
  -o-transition: $value;
  -webkit-transition: $value;
  transition: $value;
}

*, *::before, *::after {
  box-sizing: border-box;
}

/* affix scrollbar to the side of the screen, even when no scrolling is necessary.
    this is to keep the total width of the main body of the page consistent, since
    i've had a number of behavioral issues caused by the scrollbar making that inconsistent.

    we'll also be implementing this reskin for firefox in the body selector */
html {
  overflow-y: scroll;
  scrollbar-color: $thumb-color $track-color;
}

::-webkit-scrollbar {
  width: 17px;
}

::-webkit-scrollbar-track {
  background: $track-color;
}

::-webkit-scrollbar-thumb {
  background: $thumb-color;
}

::-webkit-scrollbar-thumb:hover {
  background: lighten($bg-1, 35%);
}

// --- end affixing scrollbar ---

:root {
  font-family: $font;

  --sidebar-width: min(calc(100vw - 17px), 250px);
}

/* strip text decoration based on visitation from links. because i use icon buttons in quite a few places,
    and because i want more control over the presentation of links within text, this makes the formatting
    for all of that much cleaner.
*/
a {
  &:link {
    text-decoration: none;
    color: inherit;
  }

  &:visited {
    text-decoration: none;
    color: inherit;
  }

  &:hover {
    text-decoration: none;
    color: inherit;
  }

  &:active {
    text-decoration: none;
    color: inherit;
  }
}


// the main body is a row-oriented flexbox containing the sidebar and the content column.
// when the sidebar button is toggled, the 'open' or 'closed' class goes to the body.
body {
  position: relative;
  background: $bg-1;
  margin: 0;
  min-height: 100vh;
  width: 100%;

  &.closed {
    #sidebar {
      // the arrow button will tug out a bit when hovered
      #arrow-button:hover {
        width: calc(var(--sidebar-width) + 44px);
      }

      // this moves sidebar off-screen to the left.
      left: calc(-1 * var(--sidebar-width));

      #documents {
        li.sidebar-title {
          height: 0;
        }

        li#manila-folder {
          transform: rotate(20deg);
        }
      }
    }

    #content-column {
      margin-left: 0
    }
  }

  &.open {
    #sidebar {
      // while open, the arrow will point the other direction.
      #arrow-button {
        width: calc(var(--sidebar-width) - 9px);

        i {
          transform: rotate(180deg) translateY(-1px);
        }

        // the arrow will push in a bit when hovered.
        &:hover {
          width: calc(var(--sidebar-width) - 13px);
        }
      }

      // this resets the elements of the sidebar back to where they should sit
      left: 0;
    }
  }
}

// the sidebar has an arrow button which opens and collapses it, as well as a table of contents for both
//    the current category, and the current document within that category
#sidebar {
  font-family: Ubuntu, sans-serif;
  background: rgba(#fff, 0.6);
  width: var(--sidebar-width);
  height: 100%;
  position: absolute;
  z-index: 2;

  @include transition;

  // this button opens and closes the sidebar when clicked.
  #arrow-button {
    // relative so that it can hang off the edge of the sidebar without issue
    position: relative;

    cursor: pointer;

    background-color: $bg-2;
    border: 4px solid $acc-1;
    height: 44px;
    width: calc(100% + 40px);

    font-size: 19pt;
    margin-top: 9px;
    padding-right: 9px;
    padding-left: 12px;
    border-left: 0;

    display: flex;
    align-items: center;

    @include transition;

    /* this i tag specifically refers to a font-awesome icon contained
        within this element. */
    i {
      margin: auto 0 auto auto;

      @include transition;
    }

    span {
      position: relative;
      @include transition;
    }
  }

  // this is the list which contains document titles/links
  #documents {
    position: fixed;
    list-style-type: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: var(--sidebar-width);
    gap: 0;
    @include transition;

    div.paper-sheet {
      width: 153px;
      height: 198px;
      background-color: $bg-2;
      border: 4px solid black;
      position: absolute;
    }

    li.sidebar-title, li#manila-folder {
      position: relative;
      @include transition;

      margin: {
        left: auto;
        right: auto;
      }

      font: {
        size: 12pt;
        weight: normal;
      }

      &.active {
        font-weight: bold;
        transform: rotate(7deg) translateX(10px);

        div {
          border-color: $bg-1;
        }
      }

      &.inactive {
        text-decoration: underline;
        text-decoration-color: $bg-1;
        text-decoration-thickness: 1.5px;
      }

      &#manila-folder {
        #folder-1, #folder-2 {
          height: 153px;
          width: 198px;
          background-color: #ed6;
          border: 4px solid black;
          position: absolute;
        }

        #folder-1 {
          transform: rotate(70deg) translateY(120px);
          padding: 4px;
        }

        #folder-2 {
          transform: rotate(70deg) translateY(120px) skew(10deg) translateX(-14px);
          z-index: -1;
        }

        a {
          border: none;
          font-weight: bold;
          font-size: 16pt;

          &:hover {
            color: $text-color;
          }
        }
      }

      div.sheet-contents {
        width: 145px;
        position: relative;
        top: 3px;
        left: 4px;
        display: block;

        #toc {
          list-style-type: none;
          width: 145px;
          font-weight: normal;
          font-size: 12px;
          padding: 0;

          li a {
            border-bottom: 1px solid $text-color;
            padding: 2px;

            &:hover {
              border-color: $bg-1;
              color: $bg-1;
            }
          }
        }

        a {
          border-bottom: 2px solid $bg-3;
          width: 100%;
          display: block;
          padding: 5px;
          @include transition;

          &:hover {
            border-color: $bg-1;
            color: $bg-1;
          }
        }
      }
    }
  }
}

// the presentation of the github link at the top, and the social media links at the bottom.
// they're meant to appear like post-it notes placed on the document.
.post-it {
  position: absolute;
  bottom: 0;
  background-color: #ed6;
  border: 3px solid $bg-3;
  @include square(48px);

  // min-height is included to make sure that the object doesn't flex itself down
  min-height: 48px;

  @include transition;

  &:hover {
    border: 3px solid $bg-1;

    a i {
      color: $bg-1;
    }
  }

  a {
    display: flex;
    align-items: center;

    @include square(100%);

    i {
      margin: auto;
      color: $bg-3;

      @include transition;
    }
  }

}

// this column has the top-nav stacked upon the page's title, then main content, then the post-it note footer.
#content-column {
  display: flex;
  flex-direction: column;
  @include transition;

  /* this provides the post-it notes at the bottom of the screen a consistent spot to
    position themselves from, and keeps them from causing the boundaries of the screen
    to overflow inconsistently. */
  #post-its {
    position: relative;
    margin-bottom: 12px;

    #email {
      right: 120px;
      transform: rotate(3deg);

      a i {
        font-size: 15pt;
      }
    }

    #github-profile {
      right: 80px;
      transform: rotate(7deg);

      a i {
        font-size: 18pt;
      }
    }

    #twitch {
      right: 40px;
      transform: rotate(5deg);

      a i {
        font-size: 18pt;
      }
    }

    #last-edited {
      left: 40px;
      bottom: 12px;
      transform: rotate(-0.3deg);
      font-size: 10pt;

      width: auto;
      height: unset;
      min-height: unset;
      padding: 6px;

      a i {
        margin-left: 2px;
      }

      &:hover {
        border: 3px solid $bg-3;

        a i {
          color: $bg-3;
        }
      }
    }
  }
}

// this is the navigation bar at the top with tabs representative of each project.
// it does *not* include the arrow button to open and close the sidebar.
#top-nav {
  font-family: $default-font;
  font-size: $default-text-size-2;
  padding: 16px 22px 0;
  //padding: 28px 22px 0; <- just in case i want the spacing between the arrow button and the tabs to be wider
  width: 100%;
  border: none;
  outline: none;
  text-align: left;

  display: flex;

  // the literal list of tabs
  ul {
    list-style-type: none;
    margin: 0 0 0 25px;
    //margin: 0 0 0 38px; <- just in case i want the spacing between the arrow button and the tabs to be wider
    padding: 0;
    display: flex;
    align-items: flex-end;
    flex: 1;

    // a tab in the list
    li {
      @include square(44px);
      position: relative;
      z-index: 1;

      display: flex;
      align-items: center;
      background-color: $bg-2;
      border: 4px solid $acc-1;
      margin-right: -4px;

      @include transition;

      i {
        color: $bg-3;

        @include transition;
      }

      &:hover {
        height: 48px;

        i {
          color: $bg-1;
        }
      }

      &.active {
        height: 48px;
        border-bottom: 0;

        i {
          color: $text-color;
        }
      }

      &.home-tab {
        margin-right: 7px;
      }

      a {
        display: flex;
        flex-direction: column;
        padding-top: 9px;
        align-items: center;
        @include square(100%);

        i {
          margin: 0 auto;
        }
      }
    }
  }
}

// this is the div containing the page title and content.
#content-page {
  background-color: $bg-2;
  border: 4px solid $acc-1;
  margin: -4px 18px 36px;
  height: 100%;

  text: {
    align: justify;
    justify: inter-word;
  }

  #main-content {
    padding: 18px 18px 0;
    font-size: $text-size-1;
    color: $text-color;
  }

  .under-construction {
    padding: 9px;
    position: relative;
    background-color: $bg-2;
    border: 3px solid $bg-3;
    transform: rotate(-1deg);
    margin-top: 12px;
    line-height: 30px;
    font-size: 10pt;
  }

  /* where reasonable, i like to color italicized and bolded text because
      i find it makes walls of text much easier to read. many people
      disprefer this, however, because it can be distracting. for now,
      the color scheme simply doesn't differentiate much between the two.
      in the future, i intend to set up a simple client settings cookie
      so that users can decide whether or not they would like this. */
  i:not(.fa, .fab), em {
    color: $acc-1;
  }

  b, strong {
    color: $acc-2;
  }

  a {
    color: $bg-3;
    font-weight: bold;

    text: {
      decoration: underline;
      decoration-color: $bg-1;
    }

    @include transition(all 0.1s ease-in-out);

    &:hover {
      color: $bg-1;
    }
  }

  h1 {
    margin: 0 0 -4px 0;
    font-size: $text-size-2*1.7;

    &:target {
      color: $bg-1;
    }

    a {
      margin-right: 9px;

      i.fas {
        font-size: $text-size-2*1.5;
        margin: auto;
        color: $bg-3;

        @include transition(all 0.1s ease-in-out);
      }

      i.fas.fa-tools {
        color: $bg-1;
      }

      &:hover {
        i.fa-link {
          color: $bg-1;
        }
      }
    }
  }

  hr {
    color: transparent;
    border: 1px solid $bg-3;
    margin: 20px 0 12px;
  }

  // layout arrangement for code blocks
  code {
    display: block;
    height: 100%;
    width: auto;
    margin: 0;
    padding: 9px;

    // lines of code can get pretty long! this makes sure that the page itself doesn't get horizontally stretched out.
    overflow-x: scroll;
    max-width: calc(100vw - 79px);

    background-color: #404040;
    border-radius: 4px;

    .dl {
      color: #ed9d13
    }

    tab-size: 2em;
  }

  code.language-plaintext {
    display: inline;
    background-color: rgba($bg-1, 0.4);
    padding: 0 3px;
  }

  div.highlighter-rouge div.highlight pre.highlight {
    border-radius: 4px;
  }

  // the title strip at the top of the document, as well as the github icon on the right.
  #title {
    padding: 12px 0 12px 16px;
    margin-bottom: 16px;
    width: 100%;
    border: none;
    border-bottom: 3px solid $bg-3;
    outline: none;
    text-align: left;
    font-size: $text-size-2*2;
    $title-color: $acc-2 !default;
    color: $title-color;
    font-weight: bold;

    // positioning the github repository note correctly at the top corner
    #github {
      position: relative;
      top: 4px;
      right: 14px;
      float: right;
      transform: rotate(15deg);

      a {
        text-decoration: none;
      }
    }
  }

  #main-content {
    padding-top: 0;
    max-width: 100%;
  }
}

/* the 'last edited' post-it note needs to be made more space-efficient on smaller
    screens so as not to overlap with the other post-its */
@media (max-width: 490px) {
  #last-edited {
    a:before {
      content: "Last edit: "
    }
  }
}

@media (min-width: 491px) and (max-width: 580px), (min-width: 681px) {
  #last-edited {
    a:before {
      content: "This page was last edited on "
    }
  }
}

// this is an awkward range of widths, so we have to do some special handling to keep things from overlapping
@media (min-width: 581px) and (max-width: 680px) {
  .closed #last-edited {
      a:before {
        content: "This page was last edited on "
      }
  }

  .open #last-edited {
    a:before {
      content: "Last edit: "
    }
  }
}

/* this makes the sidebar able to either sit next to the main content on wide enough screens,
    or cover over it on thinner screens */
@media (min-width: 581px) {
  #sidebar {
    background: transparent;
  }

  #content-column {
    margin-left: calc(var(--sidebar-width) - 48px);
  }
}

@media (max-width: 580px) {
  :root {
    --sidebar-width: calc(100vw - 17px);
  }
}


/* because i'm testing with different color schemes, and not all such schemes include
    background images, i only want to define a background image if the scheme called
     for it. */
@if variable-exists(bg-img) {
  $background-image: url($bg-img);

  body:before {
    content: "";
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;

    display: block;
    background-image: $background-image;
    background-repeat: no-repeat;
    background-origin: content-box;
    background-size: cover;
  }
}
